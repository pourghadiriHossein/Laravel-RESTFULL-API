openapi: 3.0.3
info:
  title: Swagger Poulstar Social Media - OpenAPI 3.0
  description: for learn swagger and yaml
  version: 1.0.0
tags:
  - name: User
    description: Everything about your Users
    externalDocs:
      description: Find out more
      url: http://127.0.0.1:8000
  - name: Post
    description: Everything about your Posts
    externalDocs:
      description: Find out more
      url: http://127.0.0.1:8000
  - name: Comment
    description: Everything about your Comments
    externalDocs:
      description: Find out more
      url: http://127.0.0.1:8000
paths:
  /api/get-verify-code/{phone}:
      get:
        tags:
        - User
        summery: get login code
        description: get code for login
        parameters:
          - name: phone
            in: path
            description: Phone Number
            required: true
            schema:
              type: string
        responses:
          "200":
            description: Successful operation
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/ApiResponse"
  /oauth/token:
      post:
        tags:
          - User
        summery: Login user
        description: Login User Oauth
        oprationId: loginUser
        requestBody:
          content:
            multipart/form-data:
              schema:
                $ref: "#/components/schemas/Login"
        responses:
          "200":
            description: Successful operation
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/ApiResponse"
  /api/register:
    post:
      tags:
        - User
      summery: Create a new user
      description: create a normal user for client
      oprationId: registerUser
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Register"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
  /api/user/profile:
    get:
      tags:
        - User
      summery: get profile
      description: get user profile after login
      oprationId: profileUser
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
      security:
        - bearerAuth: []
  /api/update-my-profile/{user}:
    post:
      tags:
        - User
      summery: Update Profile
      description: Update Your Profile
      oprationId: UpdateProfile
      parameters:
        - name: user
          in: path
          description: User ID
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/UpdateProfile"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
      security:
        - bearerAuth: []
  /api/all-users?page={pageNumber}&filter={search}:
    get:
      tags:
        - User
      summery: get all user
      description: All User for admin user
      oprationId: AllUser
      parameters:
        - name: pageNumber
          in: path
          description: page number for pagination
          schema:
            type: integer
            format: int64
            default: 1
          allowEmptyValue: true
          required: true
        - name: search
          in: path
          description: write your username to find it
          schema:
            type: string
            nullable: true
          allowEmptyValue: true
          required: false
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
      security:
        - bearerAuth: []
  /api/create-user-by-admin:
    post:
      tags:
        - User
      summery: Create a new user by admin
      description: admin can be add new user for app
      oprationId: addUser
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/CreateUser"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
      security:
        - bearerAuth: []
  /api/update-user-by-admin/{user}:
    post:
      tags:
        - User
      summery: Update User By Admin
      description: Update Your any user by admin
      oprationId: UpdateUser
      parameters:
        - name: user
          in: path
          description: User ID
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/UpdateUser"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
      security:
        - bearerAuth: []
  /api/delete-user-by-admin/{user}:
    delete:
      tags:
        - User
      summery: delete any user
      description: admin can be deleted any user
      oprationId: DeleteUser
      parameters:
        - name: user
          in: path
          description: User ID
          schema:
            type: integer
            format: int64
          required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
      security:
        - bearerAuth: []
  /api/my-posts?page={pageNumber}&filter={search}:
    get:
      tags:
        - Post
      summery: get all post
      description: get my posts data
      oprationId: AllPost
      parameters:
        - name: pageNumber
          in: path
          description: page number for pagination
          schema:
            type: integer
            format: int64
            default: 1
          allowEmptyValue: true
          required: true
        - name: search
          in: path
          description: write your title to find it
          schema:
            type: string
            nullable: true
          allowEmptyValue: true
          required: false
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
      security:
        - bearerAuth: []
  /api/create-post:
    post:
      tags:
        - Post
      summery: Create a new Post
      description: User can be add new post for app
      oprationId: addPost
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/CreatePost"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
      security:
        - bearerAuth: []
  /api/update-my-post/{post}:
    post:
      tags:
        - Post
      summery: Update Post
      description: Update my post
      oprationId: UpdatePost
      parameters:
        - name: post
          in: path
          description: Post ID
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/UpdatePost"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
      security:
        - bearerAuth: []
  /api/delete-my-post/{post}:
    delete:
      tags:
        - Post
      summery: delete my Post
      description: User can be deleted own post
      oprationId: DeletePost
      parameters:
        - name: post
          in: path
          description: Post ID
          schema:
            type: integer
            format: int64
          required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
      security:
        - bearerAuth: []
  /api/all-posts-for-admin?page={pageNumber}&filter={search}:
    get:
      tags:
        - Post
      summery: get all post for admin
      description: get all posts data for admin
      oprationId: AllPostByAdmin
      parameters:
        - name: pageNumber
          in: path
          description: page number for pagination
          schema:
            type: integer
            format: int64
            default: 1
          allowEmptyValue: true
          required: true
        - name: search
          in: path
          description: write your title to find it
          schema:
            type: string
            nullable: true
          allowEmptyValue: true
          required: false
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
      security:
        - bearerAuth: []
  /api/update-post-by-admin/{post}:
    post:
      tags:
        - Post
      summery: Update Post by admin
      description: Update any post by admin
      oprationId: UpdatePostByAdmin
      parameters:
        - name: post
          in: path
          description: Post ID
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/UpdatePost"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
      security:
        - bearerAuth: []
  /api/delete-post-by-admin/{post}:
    delete:
      tags:
        - Post
      summery: delete all Post
      description: post can be deleted any post
      oprationId: DeletePostByAdmin
      parameters:
        - name: post
          in: path
          description: Post ID
          schema:
            type: integer
            format: int64
          required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
      security:
        - bearerAuth: []
  /api/all-posts-for-dashboard?page={pageNumber}&per_page={perPage}:
    get:
      tags:
        - Post
      summery: get all post
      description: get all post ant top post for dashboard
      oprationId: AllPostForIndex
      parameters:
        - name: pageNumber
          in: path
          description: page number for pagination
          schema:
            type: integer
            format: int64
            default: 1
          required: true
        - name: perPage
          in: path
          description: write your title to find it
          schema:
            type: integer
            format: int64
            default: 4
          required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
      security:
        - bearerAuth: []
  /api/posts/{post}/like:
    get:
      tags:
        - Post
      summery: like post
      description: user can like or dislike post
      oprationId: LikePost
      parameters:
        - name: post
          in: path
          description: Post ID
          schema:
            type: integer
            format: int64
          required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
      security:
        - bearerAuth: []
  /api/view-post/{post}:
    get:
      tags:
        - Post
      summery: view post detail
      description: user can see post detail
      parameters:
        - name: post
          in: path
          description: Post ID
          schema:
            type: integer
            format: int64
          required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
      security:
        - bearerAuth: []
  /api/search-post?page={pageNumber}&per_page={perPage}&latitude={latitude}&longitude={longitude}:
    get:
      tags:
        - Post
      summery: view post detail
      description: user can see post detail
      parameters:
        - name: pageNumber
          in: path
          description: Page Number
          schema:
            type: integer
            format: int64
            default: 1
          required: true
        - name: perPage
          in: path
          description: Per Page for paginate
          schema:
            type: integer
            format: int64
            default: 4
          required: true
        - name: latitude
          in: path
          description: latitude
          schema:
            type: integer
            format: int64
            default: 37
          required: true
        - name: longitude
          in: path
          description: longitude
          schema:
            type: integer
            format: int64
            default: 49
          required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
      security:
        - bearerAuth: []
  /api/comments?post={post}&perPage={per_page}:
    get:
      tags:
        - Comment
      summery: get all comments
      description: can get all comment with pagination
      parameters:
        - name: post
          in: path
          description: post ID
          required: true
          schema:
            type: integer
            format: int64
        - name: per_page
          in: path
          description: per page count
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
      security:
        - bearerAuth: []
  /api/comments/{post}/create:
    post:
      tags:
        - Comment
      summery: Create Comment
      description: Create any Comment
      oprationId: CreateComment
      parameters:
        - name: post
          in: path
          description: Post ID
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/CreateComment"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
      security:
        - bearerAuth: []
  /api/comments/{comment}:
    get:
      tags:
        - Comment
      summery: show Comment
      description: show any Comment
      parameters:
        - name: comment
          in: path
          description: comment ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
      security:
        - bearerAuth: []
    put:
      tags:
        - Comment
      summery: update Comment
      description: update any Comment
      oprationId: UpdateComment
      parameters:
        - name: comment
          in: path
          description: comment ID
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/UpdateComment"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
      security:
        - bearerAuth: []
    delete:
      tags:
        - Comment
      summery: delete Comment
      description: delete any Comment
      parameters:
        - name: comment
          in: path
          description: comment ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
      security:
        - bearerAuth: []
components:
  schemas:
  # Login
    Login:
      type: object
      properties:
        username:
          type: string
          description: phone
        password:
          type: password
          format: password
        grant_type:
          type: string
          enum: ["password"]
          default: "password"
        client_id:
          type: integer
          enum: [1]
          default: 1
        client_secret:
          type: string
          enum: ["sL8r8yA2o3yGzbXYeb4xsg7Wie3RmKmUTOTFHVoI"]
          default: "sL8r8yA2o3yGzbXYeb4xsg7Wie3RmKmUTOTFHVoI"
  #Register
    Register:
      type: object
      properties:
        name:
          type: string
        phone:
          type: string
        email:
          type: email
        password:
          type: password
          format: password
        avatar:
          type: string
          format: binary
  #َUpdate Profile
    UpdateProfile:
      type: object
      properties:
        name:
          type: string
        phone:
          type: string
        email:
          type: email
        password:
          type: password
          format: password
        avatar:
          type: string
          format: binary
  #Create User By Admin
    CreateUser:
      type: object
      properties:
        name:
          type: string
        phone:
          type: string
        email:
          type: email
        password:
          type: password
          format: password
        avatar:
          type: string
          format: binary
        role:
          type: string
          enum: ["user", "admin"]
          default: "user"
  #Update User By Admin
    UpdateUser:
      type: object
      properties:
        name:
          type: string
        phone:
          type: string
        email:
          type: email
        password:
          type: password
          format: password
        avatar:
          type: string
          format: binary
        role:
          type: string
          enum: ["user", "admin"]
          default: "user"
  # Create Post By Admin
    CreatePost:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        image:
          type: string
          format: binary
        latitude:
          type: number
        longitude:
          type: number
  # Update Post By Admin
    UpdatePost:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        image:
          type: string
          format: binary
        latitude:
          type: number
        longitude:
          type: number
  # CreateComment
    CreateComment:
      type: object
      properties:
        parent_id:
          type: number
        title:
          type: string
        text:
          type: string
  # UpdateComment
    UpdateComment:
      type: object
      properties:
        title:
          type: string
        text:
          type: string
  # ApiResponse
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
      xml:
        name: "##default"

  securitySchemes:
    bearerAuth:            # arbitrary name for the security scheme
      type: http
      description: "Authorization: Bearer <token>"
      Authorization: Bearer <token>
      scheme: bearer
      bearerFormat: JWT


